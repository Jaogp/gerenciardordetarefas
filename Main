import java.io.*;
import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

public class Main {
    private static final String CAMINHO_ARQUIVO = "src/tarefas.txt";
    private static List<String> listaTarefas = new ArrayList<>();

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("=== Gerenciamento de Tarefas ===");
        carregarTarefasDoArquivo();

        while (true) {
            System.out.println("Selecione uma opção:\n" +
                    "[0] Sair\n" +
                    "[1] Adicionar Tarefa\n" +
                    "[2] Listar Tarefas Salvas\n" +
                    "[3] Salvar Tarefas\n" +
                    "[4] Remover Tarefas"
            );

            int opcao = scanner.nextInt();
            scanner.nextLine(); // Consumir a nova linha

            switch (opcao) {
                case 0:
                    System.out.println("=== Saindo... ===");
                    return;
                case 1:
                    adicionarTarefa(scanner);
                    break;
                case 2:
                    listarTarefas();
                    break;
                case 3:
                    salvarTarefas();
                    break;
                case 4:
                    removerTarefa(scanner);
                    break;
                default:
                    System.out.println("Opção inválida. Tente novamente.");
            }
        }
    }

    private static void carregarTarefasDoArquivo() {
        try (BufferedReader br = new BufferedReader(new FileReader(CAMINHO_ARQUIVO))) {
            String linha;
            while ((linha = br.readLine()) != null) {
                listaTarefas.add(linha);
            }
        } catch (IOException e) {
            System.out.println("Erro ao carregar tarefas: " + e.getMessage());
        }
    }

    private static void adicionarTarefa(Scanner scanner) {
        System.out.println("=== Adicionar Tarefa ===");
        System.out.println("Digite uma nova tarefa:");
        String tarefa = scanner.nextLine();
        listaTarefas.add(tarefa);
        System.out.println("=== Tarefa [" + tarefa + "] adicionada com sucesso ===");
    }

    private static void listarTarefas() {
        System.out.println("=== Listar Tarefas Salvas ===");
        if (listaTarefas.isEmpty()) {
            System.out.println("Nenhuma tarefa salva.");
        } else {
            for (int i = 0; i < listaTarefas.size(); i++) {
                System.out.println("[" + (i + 1) + "] " + listaTarefas.get(i));
            }
        }
        System.out.println("======================");
    }

    private static void salvarTarefas() {
        System.out.println("=== Salvar Tarefas ===");
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(CAMINHO_ARQUIVO, false))) {
            for (String tarefa : listaTarefas) {
                bw.write(tarefa);
                bw.newLine();
            }
            System.out.println("=== Tarefas salvas com sucesso ===");
        } catch (IOException e) {
            System.out.println("Erro ao salvar tarefas: " + e.getMessage());
        }
    }

    private static void removerTarefa(Scanner scanner) {
        System.out.println("=== Remover Tarefa ===");
        if (listaTarefas.isEmpty()) {
            System.out.println("Não há tarefas para remover.");
            return;
        }
        listarTarefas();
        System.out.println("Digite o número da tarefa a ser removida:");

        while (true) {
            try {
                int indice = scanner.nextInt() - 1; // Lê o índice da tarefa

                if (indice >= 0 && indice < listaTarefas.size()) {
                    String tarefaRemovida = listaTarefas.remove(indice);
                    System.out.println("Tarefa [" + tarefaRemovida + "] removida com sucesso!");
                    break; // Sai do loop se a tarefa foi removida
                } else {
                    System.out.println("Número inválido. Tente novamente.");
                }
            } catch (InputMismatchException e) {
                System.out.println("Entrada inválida. Por favor, digite um número.");
                scanner.nextLine(); // Limpa o buffer do scanner
            }
        }
    }
}
